name: Build and publish Iris Docker image

on:
  workflow_dispatch:
  schedule:
    - cron: '0 1 * * *'  # Run daily at midnight

jobs:
  build-and-publish:
    runs-on: ubuntu-latest

    steps:
    - name: Get Latest Release Tag
      id: latest-tag
      run: |
        TAG_NAME=$(curl -s "https://api.github.com/repos/dfir-iris/iris-web/releases/latest" | grep '"tag_name":' | sed -E 's/.*"([^"]+)".*/\1/')
        echo "tag_name=$TAG_NAME" >> $GITHUB_OUTPUT
        echo $TAG_NAME | tee version.txt

    - name: Check if latest tag has already been built
      id: check-cache
      uses: actions/cache@v3
      with:
        path: version.txt
        key: irisweb-${{ steps.latest-tag.outputs.tag_name }}
        lookup-only: true
      if: steps.latest-tag.outputs.tag_name != ''
      
    - name: Checkout code
      uses: actions/checkout@v3
      if: steps.check-cache.outputs.cache-hit != 'true'
      with:
        submodules: recursive
        repository: dfir-iris/iris-web
        ref: ${{ steps.latest-tag.outputs.tag_name }}
        path: iris-web

    - name: Set up Docker Buildx
      if: steps.check-cache.outputs.cache-hit != 'true'
      uses: docker/setup-buildx-action@v2
        
    - name: Login to Docker Hub
      if: steps.check-cache.outputs.cache-hit != 'true'
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_PASSWORD }}

    - name: Build and push
      if: steps.check-cache.outputs.cache-hit != 'true'
      uses: docker/build-push-action@v4
      with:
        context: "./iris-web"
        file: iris-web/docker/webApp/Dockerfile
        push: true
        tags: |
          ${{ secrets.DOCKER_HUB_USERNAME }}/dfir-iris-web:${{ steps.latest-tag.outputs.tag_name }}
          ${{ secrets.DOCKER_HUB_USERNAME }}/dfir-iris-web:latest
        labels: "org.label-schema.ci-build-url=https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"
          
    - name: Save tag to cache
      if: steps.check-cache.outputs.cache-hit != 'true'
      uses: actions/cache@v3
      with:
        path: version.txt
        key: irisweb-${{ steps.latest-tag.outputs.tag_name }}

